% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/humPitch.R
\docType{methods}
\name{tonalInterval}
\alias{tonalInterval}
\alias{tint}
\alias{simpletint}
\alias{getFifth}
\alias{getOctave}
\alias{getCent}
\alias{is.tonalInterval}
\alias{as.double.tonalInterval}
\alias{invert}
\alias{simplify}
\alias{generalize}
\alias{as.tonalInterval}
\title{The basic constructor for \code{tonalInterval}s.
\code{tint} accepts integer values for octaves and fifths and numeric values for cent.
\code{simpletint} accepts only an integer (fifth) and creates
a "simple" interval---i.e., an ascending interval less than one octave.}
\usage{
tint(octave = 0L, fifth = 0L, cent = numeric(length(octave)))

simpletint(fifth)

getFifth(tint)

getOctave(tint)

getCent(tint)

is.tonalInterval(x)

\S4method{==}{tonalInterval,tonalInterval}(e1, e2)

\S4method{!=}{tonalInterval,tonalInterval}(e1, e2)

\S4method{>}{tonalInterval,tonalInterval}(e1, e2)

\S4method{>=}{tonalInterval,tonalInterval}(e1, e2)

\S4method{<}{tonalInterval,tonalInterval}(e1, e2)

\S4method{<=}{tonalInterval,tonalInterval}(e1, e2)

\S4method{as.character}{tonalInterval}(x)

\method{as.double}{tonalInterval}(x)

\S4method{+}{tonalInterval,tonalInterval}(e1, e2)

\S4method{sum}{tonalInterval}(x, ..., na.rm = TRUE)

\S4method{cumsum}{tonalInterval}(x)

\S4method{-}{tonalInterval,missing}(e1)

\S4method{-}{tonalInterval,tonalInterval}(e1, e2)

\S4method{diff}{tonalInterval}(x)

\S4method{*}{tonalInterval,numeric}(e1, e2)

\S4method{*}{numeric,tonalInterval}(e1, e2)

\S4method{\%\%}{tonalInterval,tonalInterval}(e1, e2)

\S4method{\%/\%}{tonalInterval,tonalInterval}(e1, e2)

invert(tint, around = tint(0, 0))

simplify(tint)

generalize(tint)

as.tonalInterval(...)
}
\description{
The basic constructor for \code{tonalInterval}s.
\code{tint} accepts integer values for octaves and fifths and numeric values for cent.
\code{simpletint} accepts only an integer (fifth) and creates
a "simple" interval---i.e., an ascending interval less than one octave.
}
