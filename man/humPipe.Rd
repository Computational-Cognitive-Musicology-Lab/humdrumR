% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/humPiping.R
\name{humPipe}
\alias{humPipe}
\alias{\%hum>\%}
\alias{\%hum<\%}
\title{Piping humdrumR data}
\usage{
humdrumR \%hum>\% formula

humdrumR \%hum<\% formula
}
\description{
These infix operators make it possible to use
the \code{\link[humdrumR:with-in-Humdrum]{with(in)Humdrum}} 
functions in a piping style, similar to the \code{|} (pipe)
in unix-style terminals, or the \code{\link[magrittr:\%>\%]{pipe operator}}
from the R package \href{https://cran.r-project.org/web/packages/magrittr/index.html}{magrittr}.
(In fact, the \code{\link[magrittr:\%>\%]{magrittr}} pipe is imported by 
\code{\link[humdrumR:humdrumR-package]{humdrumR}}, and we encourage you to incorporate it into
your \code{humdrumR} work flows.)
}
\details{
The key is that the function \code{\link{withinHumdrum}} always returns a new
\code{\linkS4class{humdrumR}} data object. Thus, you can always send the output
of \code{\link{withinHumdrum}} back in to a new call of \code{\link{withinHumdrum}}.
This is exactly what the \code{\%hum>\%} is for: on the left-hand side,
input a \code{\linkS4class{humdrumR}} object, on the right-hand side suitable
arguments to \code{\link{withinHumdrum}} (i.e., a formula, a function, or list of formulae,
functions, and named arguments). You can then chain this call with another call to
\code{\%hum>\%} and more \code{\link{withinHumdrum}} arguments.

\code{\%hum<\%} acts the same way as \code{\%hum>\%} except it calls \code{\link{withHumdrum}}.
Since \code{\link{withHumdrum}} does \emph{not} return a \code{\linkS4class{humdrumR}},
the output can't be piped any further (using \code{\%hum>\%} or \code{\%hum<\%}).
Thus, \code{\%hum<\%} should only be used as the last step in a pipe---you would do this
if you want to extract the last step in your pipe from the data's \code{\link[humdrumR:humtable]{Humdrum Table}} into
a normal vector or list of R data.

\code{\%hum[]\%} is similar to \code{\%hum>\%} except it apply the formulae on its right-hand
side using \code{\link[humdrumR]{filterHumdrum}}. Thus, it can be used to filter/index
a \code{\linkS4class{humdrumR}} data object on the fly.
}
\examples{
humdata <- readHumdrum('path*.krn')

humdata \%hum>\% ~table(.)

humdata \%hum>\%
     c(by~Spine, do ~ table(.)) \%hum>\%
     c(mfcol ~ c(2,2), doplot~barplot(.))
     
humdata \%hum>\%
     c(by ~ Spine, do ~ table(.)) \%hum<\%
     (do ~ sort(.))    

}
