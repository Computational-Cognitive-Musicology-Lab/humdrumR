% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Chords.R
\name{sonority}
\alias{sonority}
\title{Interpret tertian sonorities from set(s) of notes.}
\usage{
sonority(
  x,
  deparser = chord,
  Key = NULL,
  inversions = TRUE,
  incomplete = TRUE,
  enharmonic = FALSE,
  inPlace = length(groupby) > 0,
  fill = TRUE,
  groupby = list(),
  ...
)
}
\arguments{
\item{x}{\emph{\strong{Input data, interpreted as pitches.}}

This vector is interpreted as pitch information using \code{\link[=tonalInterval]{tonalInterval()}}.}

\item{deparser}{\emph{\strong{What output representation do you want?}}

Defaults to \code{\link[=chord]{chord()}}.

Must be a \link[=chordFunctions]{chord function}, like \code{\link[=roman]{roman()}}, \code{\link[=harm]{harm()}} or \code{\link[=chord]{chord()}}.}

\item{Key}{\emph{\strong{The input key used by the deparser.}}

Defaults to \code{NULL}, indicating c major.
However, \link[=withinHumdrum]{with/within.humdrum} will automatically pass
a \code{Key} field in the data to \code{sonority}, if there is one.

Must be a \code{diatonicSet} or something coercable to \code{diatonicSet}; must be either length \code{1} or \code{length(x)}

Some chord parsers don't use \code{Key}, so it is irrelevant,
you \emph{will} want to use a \code{Key} for roman numerals.}

\item{inversions}{\emph{\strong{Should we interpret note sets as inversions?}}

Defaults to \code{TRUE}.

Must be a singleton \code{logical} value: an on/off switch.}

\item{incomplete}{\emph{\strong{Should we return incomplete chords?}}

Defaults to \code{TRUE}.

Must be a singleton \code{logical} value: an on/off switch.}

\item{enharmonic}{\emph{\strong{Should pitches be interpreted enharmonically?}}

Defaults to \code{FALSE}.

Must be a singleton \code{logical} value: an on/off switch.}

\item{inPlace}{\emph{\strong{Should the output always match the input?}}

Defaults to \code{FALSE} is there is no \code{groupby} list; but \code{TRUE} if there is.

Must be a singleton \code{logical} value: an on/off switch.}

\item{fill}{\emph{\strong{Should the output duplicate each chord for every note in the input?}}

Defaults to \code{TRUE}.

Must be a singleton \code{logical} value: an on/off switch.

This argument only has an effect if \code{inPlace = TRUE}.}
}
\description{
The \code{sonority()} function accepts vectors of notes, usually
grouped into multiple chords by a \code{groupby} argument, and interprets
those notes as a tertian sonority.
Chords are output using the representation indicated by the \code{deparser} argument.
By default, \link[=withinHumdrum]{with/within.humdrumR} will automatically pass
\code{sonority} the \code{groupby} argument \code{groupby = list(File, Record)},
so chords are estimated for each record in the dataset.
}
\details{
If \code{inPlace = TRUE}, sonority()\verb{returns vectorized output, with the output matching the length of the input vector. By default,}fill = FALSE\verb{, and each output chord is repeated to align with  the notes of the chord. If }fill = FALSE\verb{, each chord is returned only once, but padded with null tokens to match length of the input. Finally, if }inPlace = FALSE\verb{only one chord is returned for each group in}groupby`.

If \code{inversions = TRUE}, the notes are interpreted
in the chordal inversion that is most compact (triad like)
on the circle of thirds.
If \code{inversions = FALSE}, the lowest note is always interpreted as
the root.

If \code{incomplete = TRUE}, incomplete chords are returns as they are,
so you might see things like "C7no5" (seventh chord with no fifth).
If \code{incomplete = FALSE}, \code{sonority()} will (attempt) to fill in missing
but "implied" triad notes, note like missing 5ths.

By default, \code{sonority()} will interpret the spelling of notes strictly, so a
"mispelled" triad, like \emph{B, E♭, F♯} will be interpreted as something weird---in this case
an augmented \emph{Eb} chord with no third and a sharp 9!
Note that in the case of \href{https://en.wikipedia.org/wiki/False_relation}{cross relations}---for example,
\emph{B♭} \strong{and} \emph{B♮} in the same chord---\code{sonority()}
will simply ignore the later species that appears.
However, if \code{enharmonic = TRUE}, \code{sonority()} will reinterpret input notes
by collapsing them into a single diatonic set on the circle-of-fifths.
This means that the set \emph{B, Eb, F♯} will be interpreted as \emph{B, D♯, F♯}
and the set \emph{B♭, D, F, B♮} will be interpreted as \emph{B♭, D, F, C♭}.
}
\examples{

sonority(c('C', 'e', 'g', 'b-'))
sonority(c('G', 'BB', 'd', 'f', 'a'))

sonority(c('C', 'b-', 'd', 'f'))
sonority(c('C', 'b-', 'd', 'f'), inversions = FALSE)

\dontrun{ 
chorales <- readHumdrum(humdrumRroot, 'HumdrumData/BachChorales/.*krn')

chorales <- within(chorales, dataTypes = 'Dd', ditto(Token) -> Token_dittoed) 

within(chorales, sonority(Token_dittoed))
within(chorales, sonority(Token_dittoed, deparser = harm))
}
}
