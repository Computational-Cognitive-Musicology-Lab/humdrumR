% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tonalInterval.R
\name{pitchParsing}
\alias{pitchParsing}
\alias{tonalInterval}
\alias{tonalInterval.tonalInterval}
\alias{tonalInterval.logical}
\alias{tonalInterval.NULL}
\title{Parsing tonal (pitch) information}
\usage{
tonalInterval(...)

\method{tonalInterval}{tonalInterval}(x, ...)

\method{tonalInterval}{logical}(x, ...)

\method{tonalInterval}{`NULL`}(x, ...)
}
\description{
Parsing tonal (pitch) information
}
\details{
\code{humdrumR} includes a easy-to-use but powerful system for parsing pitch information into the \link{tonalInterval} backend representation.
Basic methods are defined for numeric values representing atonal pitch information:
\itemize{
\item \link[base:integer]{integer} values are interpreted as semitones. Watch out! In R, you need to append an \code{L} to a number to make it an explicit integer:
For example, \code{tonalInterval(3L)}.
\item \link[base:numeric]{numeric}/\code{\link[=double]{double()}} and \code{\link[=rational]{rational()}} values are interpreted as frequency ratios, assuming a \href{https://en.wikipedia.org/wiki/Pythagorean_tuning}{Pythagorean tuning}.
For example, the value \code{2.0} will be interpreted as an octave (two to one ratio.)
}

However, the most useful tool for humdrum data is parsing pitch representations encoded in \code{character} tokens.
The \code{humdrumR} regex/exclusive parsing system is used to interpret character strings as tonalIntervals.
This includes character tokens with pitch information embedded alongside other information, like \verb{"4.ee} in a kern token.
There are six regex-patterns that \code{tonalInterval} known how to parse automatically:\tabular{lcr}{
   Representation \tab Exclusive \tab Example \cr
   Kern \tab **kern \tab \verb{ee-} \cr
   \href{https://en.wikipedia.org/wiki/Scientific_pitch}{Scientific Pitch} \tab **pitch \tab \code{Eb5} \cr
   Interval \tab **hint/**mint/**int \tab \code{+m3} \cr
   Scale degree \tab **deg \tab \code{b3} \cr
   Solfege \tab **solfa \tab \code{me} \cr
   \href{https://lilypond.org/doc/v2.22/Documentation/notation/pitches}{Lilypond pitch} \tab none \tab \verb{ees'} \cr
}


If you call \code{tonalInterval} (or \link[=pitch]{any function that uses tonalInterval as a parser}) on a \code{character} string,
the regex-system will automatically (attempt) to interpret the tokens as on the pitch types above---if there is a conflict
the representations are favored in the order they are presented in the table above.
If a matching exclusive interpretation (see table above) is provided using the \code{Exclusive} argument,
this choice overrides the regex-dispatch.
If there is no match, an NA \code{tonalInterval} is returned.
\subsection{Parsing with Options}{

The six tonal representations listed above function through a common parsing interface.
}
}
