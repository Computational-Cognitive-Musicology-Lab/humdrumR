% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tonalInterval.R
\name{quality}
\alias{quality}
\title{Extract quality from pitch}
\usage{
quality(x, ..., Key = NULL, parseArgs = list(), inPlace = FALSE)
}
\arguments{
\item{x}{(\code{atomic} vector) The \code{x} argument can be any (\link[base:vector]{atomic}) vector, or a \link[=tonalIntervalS4]{tonalInterval}, or \code{NULL}.}

\item{...}{These arguments are passed to the \link[=pitchDeparsing]{pitch deparser}.
There are also two hidden (advanced) argumens you can specify: \code{memoize} and \code{deparse} (see the details below).}

\item{Key}{(a \link{diatonicSet} or something coercable to \code{diatonicSet}, \code{length == 1 | length == length(x)}) The input \code{Key} used by
the parser, deparser, and transposer.}

\item{parseArgs}{(\code{list}) \code{parseArgs} can be a list of arguments that are passed to the \link[=pitchParsing]{pitch parser}.}

\item{inPlace}{(\code{logical}, \code{length == 1}) This argument only has an effect if the input (the \code{x} argument) is \code{character} strings,
\emph{and} there is extral, non-pitch information in the strings "beside" the pitch information.
If so, and \code{inPlace = TRUE}, the output will be placed into an output string beside the original non-pitch information.
If \code{inPlace = FALSE}, only the pitch output information will be returned (details below).}
}
\description{
Extract quality from pitch
}
\seealso{
Other {pitch functions}: 
\code{\link{accidental}()},
\code{\link{bhatk}()},
\code{\link{cents}()},
\code{\link{degree}()},
\code{\link{freq}()},
\code{\link{helmholtz}()},
\code{\link{interval}()},
\code{\link{kern}()},
\code{\link{lilypond}()},
\code{\link{octave}()},
\code{\link{pc}()},
\code{\link{pitch}()},
\code{\link{semits}()},
\code{\link{solfa}()},
\code{\link{solfg}()},
\code{\link{step}()},
\code{\link{tonh}()}

Other {partial pitch functions}: 
\code{\link{accidental}()},
\code{\link{octave}()},
\code{\link{step}()}
}
\concept{{partial pitch functions}}
\concept{{pitch functions}}
