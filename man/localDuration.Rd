% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rhythm.R
\name{localDuration}
\alias{localDuration}
\title{Calculate overall duration of a group}
\usage{
localDuration(
  x,
  choose = min,
  deparser = duration,
  ...,
  Exclusive = NULL,
  parseArgs = list(),
  groupby = list()
)
}
\arguments{
\item{x}{An input vector which is parsed for duration information using the \link[=rhythmParsing]{rhythm parser}.}

\item{choose}{A function which takes a vector of \code{numeric} and returns a single \code{numeric} value. Defaults to \code{min}; \code{max}, \code{median}, or \code{mode} might be reasonable alternatives.}

\item{deparser}{A \link[=rhythmFunction]{rhythm function} to generate the output representation.}

\item{parseArgs}{A \code{list} of arguments to pass to the \link[=rhythmInterval]{rhythm parser}.}

\item{groupby}{A \code{list} of vectors, of the same length as \code{x}, which are used to group \code{x}.}
}
\description{
\code{localDuration()} calculates the "overall" duration within groups in an input vector.
What the hell does that mean?
Usually, it is used to find the duration of each \emph{record} in a humdrum file.
}
\details{
The way rhythm and time are typically encoded in humdrum format, the "overall" duration of
a record is determined by the shortest duration in the record, if there are any.
So, if we have a file like this:\preformatted{**kern  **kern     **silbe
    4c      8g        Hum-
     .      8f           _
     !       !    !melisma  
    8b      8f       -drum
    8c      8e           _
    2d      4a         da-
     .       .           .
     .      4g         -ta
    G;      g;         ooh
    *-      *-          *-     
}

The "local" duration of each record would be (in \verb{**recip}):\preformatted{**kern  **kern     **silbe   -> 1\%0
    4c      8g        Hum-   -> 8
     .      8f           _   -> 8
     !       !    !melisma   -> 1\%0
    8b      8f       -drum   -> 8
    8c      8e           _   -> 8
    2d      4a         da-   -> 4
     .       .           .   -> 1\%0
     .      4g         -ta   -> 4
    G;      g;         ooh   -> 1\%0
    *-      *-          *-   -> 1\%0
}

Note that some records are length zero (\verb{1\%0}), because they are missing any duration information.
(In this example we are showing durations of \verb{1\%0} for comment, interpretation, and null data records. In most cases, we'd
be doing \code{within(humData, dataTypes ='D')}, which is the default behavior, so these records wouldn't be counted at all.)

\code{localDuration()} begins with a call to \code{\link[=duration]{duration()}} on the input argument \code{x}---the \code{parseArgs()} argument can be used to pass arguments to the \link[=rhythmParsing]{parser} (the \code{Exclusive} argument is passed as well).
\code{localDuration()} then groups the durations based on unique combinations of values in the \code{groupby} argument, which must be a list of
vectors that are the same length as \code{x}.
By default, the minimum duration within each group is returned, recycled as necassary to match the input length.
The \code{choose} argument can be set to another function, if desired.
For example, you could use \code{localDuration(x, choose = max)} to find the \emph{maximum} duration in each group.
If the \code{groupby} argument is empty (the default) the durations are returned unchanged, except that \code{NA} durations are set to \code{0}.
Luckily, if \code{localDuration()} is used inside a \link[=withinHumdrum]{with(in).humdrumR} expression, the \code{groupby = list(File, Record)} is \emph{automatically}
passed (this can be overridden by explicitely setting the argument).
This means that \code{with(humData, localDuration(Token))} will automatically calculate the minimum duration of each record.

Note that, \code{localDuration()} follows the default behavior of \code{\link[=duration]{duration()}} by treating grace-notes as duration \code{0}.
If you want to use the duration(s) of grace notes, specify \code{grace = TRUE}.

The output representation can be controlled using the \code{deparser} argument, defaulting to \code{\link[=duration]{duration()}}.
For example, \code{deparser = recip} will return the output in \verb{**recip} format.
\code{...} arguments are passed to the deparser.
}
\examples{

humData <- readHumdrum(humdrumRroot, "HumdrumData/BeethovenVariations/.*krn")

within(humData, localDuration(Token))

}
\seealso{
Other rhythm analysis tools: 
\code{\link{timeline}()}
}
\concept{rhythm analysis tools}
