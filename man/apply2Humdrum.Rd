% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Apply.R
\name{apply2Humdrum}
\alias{apply2Humdrum}
\alias{happly}
\title{Apply functions to humdrum data

\code{apply2Humdrum} is just a wrapper for
\verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]},
included to parallel the \code{R} family of \verb{[base:lapply][_apply]} functions.
\code{apply2Humdrum} uses \href{http://adv-r.had.co.nz/Computing-on-the-language.html}{non-standard evaluation}
to capture arguments fed to it without the user needing to make explicit
\verb{[base:tilde][formula]} using \code{~}. This is only guaranteed to work
in the \verb{[base:environment][global environment]}, so be careful. If you run into
problems, switch over to \verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]} and use
explicit \verb{[base:tilde][X~formulas]}.}
\usage{
apply2Humdrum(humdrumR, FUN, ..., within = TRUE, doplot = FALSE)

happly(humdrumR, FUN, ..., within = TRUE, doplot = FALSE)
}
\arguments{
\item{humdrumR}{A \link{humdrumRclass} data object.}

\item{FUN}{A function to apply to the \link[=Active]{humdrumR:humdrumR}\verb{field(s) in the}humdrumR` object.}

\item{...}{Any arguments which can be fed to
\verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]} as formulae (except for
\code{do} expressions, which are replaced by the \code{FUN} argument!).
However, rather that writinging formula in the format \code{Keyword ~ Expression},
\code{apply2Humdrum} arguments should be written as normal \code{R} arguments:
\code{Keyword = Expression}.
Unnamed arguments are ignored.
#' @param within A logical. If \code{TRUE} (the default),
\verb{[humdrumR:with-in-Humdrum][withinHumdrum]} is used to apply the
function---meaning that the output is reconstituted into a new field in the
\code{humdrumR} object. If \code{within == FALSE},
\verb{[humdrumR:with-in-Humdrum][withHumdrum]} is used instead,
which results in the function's output being returned inprocessed.}

\item{doplot}{Boolean. If \code{TRUE} the \code{FUN} argument is treated
as a \code{doplot} expression by \verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]},
so the result is ignored (for plotting or side-effects purposes).}
}
\description{
Apply functions to humdrum data

\code{apply2Humdrum} is just a wrapper for
\verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]},
included to parallel the \code{R} family of \verb{[base:lapply][_apply]} functions.
\code{apply2Humdrum} uses \href{http://adv-r.had.co.nz/Computing-on-the-language.html}{non-standard evaluation}
to capture arguments fed to it without the user needing to make explicit
\verb{[base:tilde][formula]} using \code{~}. This is only guaranteed to work
in the \verb{[base:environment][global environment]}, so be careful. If you run into
problems, switch over to \verb{[humdrumR:with-in-Humdrum][with(in)Humdrum]} and use
explicit \verb{[base:tilde][X~formulas]}.
}
