% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/humdrumR-class.R
\name{Humtable}
\alias{Humtable}
\alias{getHumtab}
\title{Humdrum Tables}
\usage{
getHumtab(humdrumR, dataTypes = 'GLIMdD')
}
\description{
In \link{humdrumR}, humdrum data is stored (within \link{humdrumR} objects)
in a data structure called a \strong{Humdrum Table}. A humdrum table
is actually a \code{\link[data.table]{data.table}}, from the
R package of the same name. \code{\link[data.table:data.table]{data.tables}}
are simply enhanced R \code{\link[base:data.frame]{data.frames}}, with a few
handy optimizations.
}
\details{
In a humdrum table, each row represents a single 'token'
in the original humdrum data. (Multistops---tokens separated by spaces---are even broken into
their own rows). Each column represents a single
piece of information associated with the token, which we call a \strong{field}.
Throughout this documentation, you should keep in mind that a "token" refers
to a row in the humdrum table while a "field" refers to a column.
}
\section{Fields}{


There are five types of fields in a humdrum table:
\enumerate{
\item{Data fields}
\item{Structure fields}
\item{Interpretation fields}
\item{Form fields}
\item{Reference fields}
}
When first created by a call to \link{readHumdrum} every
humdrum table has at least eighteen fields: one data field (\code{Token}), two interpretation
fields (\code{Tandem} and \code{Exclusive}), three section fields, and twelve structure fields. Additional fields
may be present depending on the content of the humdrum file(s), and even more fields can be created
by users.

\strong{1. Data fields:} Data fields are used to describe individual data points
in humdrum data (as opposed to groups of points).
Every humdrum table starts with a data
field called \strong{Token}, which
contains character strings representing the original strings read from the humdrum files.
Users can create as many additional data fields as they like. Every call to
\link{withinHumdrum}---which can also be called using the
\code{\link[humdrumR:humPipe]{\%hum>\%}} piping
operator---generates one or \eqn{N} new data fields named \eqn{{Pipe1, Pipe2, ..., PipeN}}.
(These fields can then be renamed using the \verb{$<-} operator, if you want.)

\strong{2. Structure fields:} Structure fields describe where each data point
came from---which file, which spine, which record, etc.
Every humdrum table starts with fourteen Structure fields, describing where
the token came from:
\describe{
\item{Filename}{\code{character} - The unique name of the humdrum file. May include an appended path
if more than one file with the same name were read from different directories (see\link{readHumdrum} docs).}
\item{Filepath}{\code{character} - The full file name (including its full path).}
\item{File}{\code{integer} - A unique number associated with each read file (files are numbered alphabetically).}
\item{Label}{\code{character} - A label specified during the call to \link{readHumdrum}, associated with
\item{Piece}{\code{integer}} - A number specifying the number of the piece in the corpus. Only different from \code{File} when
more than one piece were read from the same file.
a particular REpath-pattern. If no label was specified, patterns are just labeled \code{"_n"}, where "n" is the
number of the pattern. (Labels can also be created when merging two humdrumR objects.) }
\item{Record}{\code{integer} - The record (i.e., line) number.}
\item{NData}{\code{integer} - An enumeration of \strong{data records} specifically.}
\item{Global}{\code{logical} - Did the token come from a glocal record (i.e., a record with no spine)?}
\item{Type}{\code{character} - What type of record is it? \code{"D"} = non-null data; \code{"d"} = null data;
\code{"I"} = interpretation; \code{"M"} = measure/barline; \code{"L"} = local comment;
\code{"G"} = global comment. There is also a \code{"P"} type, which indicates null "non-tokens"
(see the \code{\link[humdrumR:humColumns]{humdrumR columns}} documentation for an explanation). }
\item{Null}{\code{logical} - Is this a null record (i.e., is the token ".", "*", "!", "!!", "!!!", or "=")?}
\item{Spine}{\code{integer} - The spine. This field is \code{NA} when \code{Global == TRUE}.}
\item{Path}{\code{integer} - The "spine path." Any time a \code{*^} spine path split occurs in
the humdrum data, the right side of the split becomes a new "path." The original path
is numbered \code{0}---if there are no spine path splits, the \code{Path} field is all zeros.
This field is always \code{NA} when \code{Global == TRUE}. (Check out
the \code{\link[humdrumR:humColumns]{humdrum columns}} documentation for a more thorough explanation
of spine paths.)}
\item{Column}{\code{integer} - Which tab-delineated column in the humdrum data---irrespective of Spine/Paths.
See this \code{\link[humdrumR:humColumns]{explanation of columns in humdrumR}}.}
\item{Stop}{\code{integer} - Which token in a multistop token. Single tokes are numbered \code{1}.
This field is always \code{NA} when \code{Global == TRUE}.}
}

\strong{Interpretation fields:} Interpretation fields describe interpretation metadata in the humdrum file(s).
Humdrum interpretations are tokens that "carry forward" to data points after them, unless cancelled out by a
subsequent interpretation.
All humdrum data must have an \emph{exclusive} interpretation, marked
with two asterisks ("**x")---thus, all humdrum tables have an \code{Exclusive} field indicating the
exclusive interpretation associated with that token.
Humdrum may or may not include \emph{tandem} interpretations. A universal rule for parsing
tandem intepretations is impossible, because A) tandem interpretations can "overwrite" each other and B)
users can create their own tandem interpretation. The best we can do in all cases is
identify \emph{all} tandem interpretations that have appeared previously in the spine
(counting most recent first). All these previous interpretations are encoded in a single
character string in the \code{Tandem} field. Users can parse this field using the
\link{getTandem} function. If no tandem interpretations occur in a file,
the \code{Tandem} field is still created, but is simply full of empty strings (\code{""}).

Fortunately, many tandem interpretations are widely used and standardized, and these
interpretations are known by \code{humdrumR}. Recognized interpretations (such as "\*clef_" and "\*k\link{x}")
are automatically parsed into their own fields by a call to \link{readHumdrum}.
See the \link{readHumdrum} documentation for more details.

\strong{Form fields:} Form fields indicate musical sections, or time windows within
a piece, including formal designations ("verse", "chorus", etc.) and measures/bars.
Humdrum data may or may not include formal metadata fields, indicated by the token \code{"*>"}.
Classified formal marks are put into fields matching their name.
Unclassified formal marks are placed in a field called \code{Formal} as a default.
Nested formal categories are appended with an underscore and a number for each level of descent:
\verb{Formal_1, Formal_2, ..., Formal_N}.
If part of a section is not given a name in a lower hierarchical level, the field is simply
empty (\code{""}) at that point.

Humdrum data may or may not also include barlines (tokens beginning \code{'='}).
\link{readHumdrum} always Three section fields are
\describe{
\item{Bar}{\code{integer} - How many single barline records have passed before this token?
If no '=' tokens occur in the file, \code{Bar} is all zeros.}
\item{DoubleBar}{\code{integer} - How many double barlines have passed before this token?
If no \code{'=='} tokens occur in the file, \code{DoubleBar} is all zeros.}
\item{BarLabel}{\code{character} - Any characters that occur after initial \code{'='} or
\code{'=='} of previous bar token. These include the \code{"-"} in
the \code{'=-'} pickup barline,
repeat tokens (like \code{"=:\|\|"}), and also explicit \emph{bar numbers}. Note that
the \code{Bar} field always enumerate every single \code{'='} bar record, while
measure number labels in humdrum data (which appear in the \code{BarLabel} field) may
do weird things like skipping numbers, repeating numbers, and having suffixes (e.g., "19a")
If no barline tokens appear in the file, \code{BarLabel} is all empty strings (\code{""}).}
}

\strong{Reference fields:} Reference fields describe any \emph{Reference Records}
in the humdrum data. Every reference record (records beginning \code{"!!!"}) in any
humdrum file in a corpus read by \link{readHumdrum} is parsed into a field named
by the reference code: \code{"XXX"} in \code{"!!!XXX"}. Reference tokens are all identical throughout
any humdrum piece. If a reference code appears in one file but not another, the field is
\code{NA} in the file which does not have the code. If no reference records appear in any
files, no Reference fields are created.
}

\section{Philosophy}{

Why break humdrum data into this "flat" structure, destroying the spreadsheet-like
grid structure of the original humdrum data? The Humdrum Table structure affords
maximum data analysis flexibility. Thanks to the Structure fields, we can easily
regroup and reform the structures of humdrum data (like spines).
However, if you would like to change the "flat" structure of a humdrum table,
check out the \code{\link[humdrumR:humShape]{humdrumR reshaping funcitons}}.

...
}

