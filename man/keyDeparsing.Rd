% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Keys.R
\name{keyDeparsing}
\alias{keyDeparsing}
\title{Generating ("deparsing") key representations}
\description{
\link{humdrumR} includes a easy-to-use system for
generating a variety of diatonic key representations,
which can be flexibly modified by users.
"Under the hood" \code{humdrumR} represents all tonal chord information using the \link[=diatonicSetS4]{same underlying representation},
which is typically extracted from input data using the \link[=keyParsing]{key parser}.
This representation can then be "deparsed" into a variety of predefined output formats,
or into new formats that you create!
}
\details{
Deparsing is the second step in the \link[=keyFunctions]{key function} processing pipeline:
\itemize{
\item \strong{Input} representation \verb{|>}
\itemize{
\item \emph{Parsing} \verb{|>}
\itemize{
\item \strong{Intermediate} (\link[=diatonicSetS4]{diatonicSet}) representation \verb{|>}
\item \strong{Transformation}  \verb{|>}
}
\item \emph{Deparsing} (DEPARSING ARGS GO HERE) \verb{|>}
}
\item \strong{Output} representation
}

Various pitch representations can be generated using predefined \link[=keyFunctions]{key functions} like \code{\link[=key]{key()}}
\code{\link[=signature]{signature()}}, and \code{\link[=romanKey]{romanKey()}}.
All of these functions use a common deparsing framework, and are specified using different combinations of arguments
to the deparser.
By modifying these \emph{"deparsing" arguments}, you can exercise
fine control over how you want pitch information to be represented in your output.
}
\seealso{
All \code{humdrumR} \link[=keyFunctions]{key functions} make use of the deparsing functionality.
}
