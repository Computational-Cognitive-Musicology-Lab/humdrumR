% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/humdrumR-class.R
\name{foldHumdrum}
\alias{foldHumdrum}
\alias{foldPaths}
\alias{foldStops}
\title{"Fold" data into new fields}
\usage{
foldHumdrum(
  humdrumR,
  fold,
  onto,
  what = "Spine",
  File = NULL,
  fromField = activeFields(humdrumR)[1],
  newFieldNames = NULL
)

foldPaths(humdrumR)

foldStops(humdrumR)
}
\arguments{
\item{`humdrumR`}{A \link[=humdrumR-class]{humdrumR data object}.}

\item{`fold`}{(\code{numeric}, whole number) The target structure (spine, path, etc.) \emph{from which}
to "fold" data to another structural position and field(s).}

\item{`onto`}{(\code{numeric}, whole number) The target structure (spine, path, etc.) \emph{to which}
the "fold" data is moved.}

\item{`what`}{(\code{character}, \code{length == 1}) The structural field which is folded across.
Valid options are \code{"Spine"}, \code{"Path"}, \code{"Stop"}, \code{"Record"},and \code{"NData"}.}

\item{`File`}{(\code{NULL} or \code{numeric}, \code{length == length(onto)}, whole number) Used to specify
specific folds for different files in the corpus (see "File-Specific Folding" section, below).}

\item{`fromField`}{(\code{character}, \code{length == 1}) A string (partially) matching the
name of a data field in the \code{humdrumR}-object input. This field is the field which is
"folded" to a new field.}

\item{`newFieldNames`}{(\code{character}) Names to use for new fields created by the folding.}
}
\description{
Many humdrum datasets encode data spread across multiple spines, spine-paths, or stops.
By default, \code{humdrumR} parses each separate spine, spine-path, and stop as their own individual
data points, taking up one row in the \link[=humTable]{humdrum table}.
If we want to treat data in multiple spines/paths/stops as different aspects of the same data
it is easiest to reshape the data so that the information is in different humdrumR \link[=fields]{fields}
rather than separate spines/paths/stops.
We "fold" the data from structural field over "on top" of other data using \code{foldHumdrum}.
The convenient \code{foldStops()} and \code{foldPaths()} functions automatically fold \emph{all} stops/paths in a dataset onto the first stop/path,
creating new fields named, e.g., \code{Path1}, \code{Path2}, etc.
}
\details{
The \code{numeric} \code{fold} and \code{onto} arguments, specify where to fold from/to.
\code{fold} indicates the Spine/Path/Stop to fold \emph{from}, "\strong{on to}" the Spine/Path/Stop
indicated by \code{onto}.
For example, if you specify \code{foldHumdrum(mydata, fold = 2, onto = 1, what = 'Spine')}
spine 2 will be folded "on top of spine 1.

The \code{fold} and \code{onto} arguments can be vectors of any length, which are interpreted in parallel:
for example, the combination \code{fold = 1:2} and \code{onto = 3:4} would map the first spine
to the third spine (\code{1 -> 3}) and the second spine to the 4th spine (\code{2 -> 4}).
The \code{onto} targets can be duplicated, which will cause the \code{fold} spines to be folded onto
multiple new fields: for example, the combination \code{fold = 1:2} and \code{onto = c(3, 3)} will
map first spine \emph{and} the second spine on to \emph{two} new fields of the third spine.
The lengths of \code{fold} and \code{onto} are automatically matched, so this
previous cane also be achieved more concisely as \code{fold = 1:2} and \code{onto = 3}.

The \code{fold} and \code{onto} targets may not overlap.
In the current version, the \code{onto} argument can not be longer than the \code{fold} argument.

To specify what structural field you want to fold across,
use the \code{what} argument (\code{character}, \code{length == 1}).
The default \code{what} value is \code{"Spine"}; other common fold options are \code{"Path"},
and \code{"Stop"}, though you might want to use the convenient \code{foldPaths()} and \code{foldStops()}
functions directly (details below).
(You may also fold across \code{"Record"} or \code{"NData"}), but these are advanced/tricky!)

The \code{fromField} (\code{character}, \code{length == 1}) controls which field in the \code{fold}
spine/path/stop is folded into a new field.
The \code{fromField} argument defaults to the (first) \link[=humActive]{active field},
and must match (or partially match) a field in the \code{humdrumR} argument data set.

The resulting new fields will automatically be named as appropriate pipes.
The \code{newFieldNames} argument (\code{character}) can be used to control the output names:
one for each new field created by the fold.
If you specify too many \code{newFieldNames}, the later names are ignored.
If you specify too few \code{newFieldNames}, the later names will be given pipe names,
consistent with the default behavior.
}
\section{File-Specific Folding}{


By default, the same "fold" is carried out in each file of the input corpus
(\code{humdrumR} argument).
If you need to specify different folds in different files, you have to specify the \code{File}
argument (\code{numeric}, whole number).
For \emph{every} file in the corpus you want to apply folds to, you must specify all the \code{fold}
and \code{onto} arguments in parallel vectors with the \code{File} argument (even if this is reduendant
for some files).
For example, if we specify the combinations,\tabular{ccc}{
   \code{fold} \tab \code{onto} \tab \code{File} \cr
   \code{1} \tab \code{2} \tab \code{1} \cr
   \code{3} \tab \code{4} \tab \code{1} \cr
   \code{1} \tab \code{2} \tab \code{2} \cr
   \code{4} \tab \code{3} \tab \code{2} \cr
}


then
\itemize{
\item In \code{File} one:
\itemize{
\item the first spine is mapped to the second spine
\item the third spine is mapped to the fourth spine
}
\item In \code{File} two:
\itemize{
\item the first spine is mapped to the second spine
\item the fourth spine is mapped to the third spine
}
}

If any files in the corpus are not included, they will not be affected at all!
}

\seealso{
\code{\link[=foldExclusive]{foldExclusive()}} is a particularly useful application of folding. \code{\link[=collapseHumdrum]{collapseHumdrum()}} also serves a similar function.

Other {Humdrum data "reshaping" functions.}: 
\code{\link{collapseHumdrum}()},
\code{\link{foldExclusive}()}
}
\concept{{Humdrum data "reshaping" functions.}}
