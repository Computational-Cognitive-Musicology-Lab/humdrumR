% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Regex.R
\name{RegexFind}
\alias{RegexFind}
\alias{\%~l\%}
\alias{\%~i\%}
\alias{\%~n\%}
\alias{\%~m\%}
\alias{\%~\%}
\alias{\%!~\%}
\alias{\%!~l\%}
\alias{\%!~i\%}
\title{Match strings against regular expression}
\usage{
x \%~l\% regex

x \%~i\% regex

x \%~n\% regex

x \%~m\% regex

x \%~\% regex

... \%!~\% NA

... \%!~l\% NA

x \%!~i\% pattern
}
\arguments{
\item{x}{A \code{character} vector to search in.}

\item{regex}{One or more regular expressions. If more than one regex is supplied,
matches to \emph{any} of the regexes are returned. (See "Multiple regexes" section.)}
}
\description{
The functions give you a concise way to search for regular expressions in \code{character} vectors.
They are "infix" functions, meaning you write the function between its two arguments:
\code{myvector \%~\% regex}.
}
\details{
Each version of the function returns a different type of information about regex matches (if any)
in the input vector:
\itemize{
\item \verb{\%~l\%}: returns \code{logical} (\code{TRUE}/\code{FALSE}) indicating where in \code{x} there are matches.
\item \verb{\%~i\%}: returns \code{integer} indicating the indices of matches in \code{x}.
\item \verb{\%~n\%}: returns \code{integer} indicating the number (count) of matches in each string.
\item \verb{\%~m\%}: returns \code{character} string of the matched string itself. Returns \code{NA}
where there is no match.
}

The basic function (\verb{\%~\%}) is the same as \verb{\%~l\%}.
There is also a negative versions of the \code{l} and \code{i} functions: giving all
strings that \emph{don't} match the given regular expression.
These are \verb{\%!~\%}, \verb{\%!~l\%}, and \verb{\%!~i\%}.

These functions are simply syntactic sugar for
existing \code{R} regular expression matching functions:
\itemize{
\item \verb{\%~l\%}: \code{\link[base:grep]{base::grepl()}}
\item \verb{\%~i\%}: \code{\link[base:grep]{base::grep()}}
\item \verb{\%~n\%}: \code{\link[stringi:stri_count]{stringi::stri_count_regex()}}
\item \verb{\%~m\%}: \code{\link[stringi:stri_extract]{stringi::stri_extract_first_regex()}}
}
}
\section{Multiple regexes}{


If more than one regex is supplied,
\verb{\%~l\%} and \verb{\%~i\%} return the indices where \emph{any} of the regexes match.
In the case of \verb{\%~n\%}, each matching regex is counted separately, and they are all summed.
In the case of \verb{\%~m\%}, all matches (if any) are pasted together,
including multiple matches of the same string.
}

