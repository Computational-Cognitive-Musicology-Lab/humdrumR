meterAnalyze <- function(dur, meter = c(.25, .25, .25, .25), subdiv = 1/16) {
measure <- sum(meter)
moff <- measureOffset(dur, measure)
beats <- beats(moff, meter, subdiv = subdiv, measure = measure)
beats$Dur <- dur
beats$Moff <- moff
beats
}
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8,/1/4), subdiv=1/8)
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
rm(beats)
rm(measureOffset)
rm(meterAnalyze)
devtools::load_all()
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
moff
beats
cumsum(beats)
beats
beat
moff
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
subbeat
moff %/% subdiv
moff
subdiv
cbind(moff, moff %/% subdiv)
cbind(moff, 1 + (moff %/% subdiv))
.5 %/% subdiv
moff / subdiv
devtools::load_all()
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
subbeat
devtools::load_all()
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
meterAnalyze(duration(c('4.','8','8','4.','4','4.','8','8','4','4','8','4','8','4','2')), meter = c(3/8, 1/4), subdiv=1/8)
cbind(moff, 1 + (moff %/% subdiv))
cbind(moff, 1 + floor(moff / subdiv))
moff / subdiv
1 + (moff / subdiv)
cbind(moff, 1 + floor(moff / subdiv))
cbind(1 + floor(moff / subdiv))
cbind(moff, 1 + floor(moff / subdiv))
1 + floor(moff / subdiv)
moff / subdiv
1 + (moff / subdiv)
1 + floor(moff / subdiv)
devtools::load_all()
z <- rational(sample(30),sample(30)); z ; sum(z)
length(z)
x <- sample(100,1e5, replace=T)
y <- sample(100,1e5, replace=T)
system.time(pracma::gcd(x,y))
system.time(.gcd(x,y))
system.time(.gcd(x,y))
r
devtools::load_all()
system.time(.gcd(x,y))
x <- sample(100,1e3, replace=T)
y <- sample(100,1e3, replace=T)
system.time(.gcd(x,y))
system.time(.gcd(x,y))
r
length(x)
length(x)
length(x)
length(x)
length(x)
length(x)
length(x)
length(x)
length(x)
devtools::load_all()
system.time(.gcd(x,y))
x <- sample(100,1e5, replace=T)
y <- sample(100,1e5, replace=T)
system.time(.gcd(x,y))
.gcd(x,y)
system.time(pracma::gcd(x,y))
system.time(pracma::gcd(x,y))
pracma::gcd(x,y)
pracma::gcd(x,y) == .gcd(x,y)
devtools::load_all()
pracma::gcd(x,y) == .gcd(x,y)
system.time(pracma::gcd(x,y))
system.time(.gcd(x,y))
system.time(.gcd(x,y))
x <- sample(100,1e6, replace=T)
y <- sample(100,1e6, replace=T)
system.time(.gcd(x,y))
system.time(pracma::gcd(x,y))
system.time(.gcd(x,y))
devtools::load_all()
sample(100,1e6, replace=T)
x<-sample(100,1e6, replace=T)
y<-sample(100,1e6, replace=T)
.gcd(x,y)
system.time(.gcd(x,y))
system.time(pracma::gcd(x,y))
pracma::gcd(x,y) == .gcd(x,y)
all(pracma::gcd(x,y) == .gcd(x,y))
all(pracma::Lcm(x,y) == .lcm(x,y))
system.time(pracma::Lcm(x,y))
system.time(.lcm(x,y))
devtools::load_all()
x
x <- rhythmInterval(c('4.','8','4','4','4','8','8','2'))
x
x <- rhythmInterval(c('4.','8','4','4','4','8','8','2', '4.','8','8','8','4','4','8','8','4','4','2'))
measureOffset(x)
devtools::load_all()
measureOffset(x)
measureOffset(x,rhythmInterval('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.'))
c
x
measureOffset(x,rhythmInterval('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1'))
rhythmInterval('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')
measureOffset(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
measureOffset(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
beats(measureOffset(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1'))))
beats(measureOffset(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1'))), rational(1,4))
devtools::load_all()
beats <- function(moff,  beats = rational(1,4), subdiv = rational(1,8), measure = rational(1)) {
span <- sum(beats)
beats <- rep(beats, measure / span)
if (sum(beats) != measure) .stop('In call to beats, the beats argument cannot evenly divide the measure span.')
durs <- unique(c(delta(beats), subdiv))
durs <- durs[durs != rational(0)]
if (Reduce('gcd', durs) != subdiv) .stop('{subbeat} is not a valid subdivider of the beats pattern.')
beat <- findInterval(moff, cumsum(beats), rightmost.closed = TRUE)
subbeat <- floor(sigma(c(0, head(beats, -1))) / subdiv)
subbeat <- round(moff / subdiv) - subbeat[beat + 1]
data.table(Moffset = moff,
Beat = beat,
Subbeat = subbeat,
Remainder = moff %% subdiv)
}
beats(measureOffset(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1'))), rational(1,4))
rational(0:7,8)
rational(2:7,8)
rational(2:8,8)
rational(2:8,8) / rational(1,4)
rational(2:8,8) * rational(1,4)
x <- sample(100,1e7, replace=T)
y <- sample(100,1e7, replace=T)
system.time(.gcd(x,y))
y <- sample(1000,1e7, replace=T)
x <- sample(1000,1e7, replace=T)
system.time(.gcd(x,y))
.gcd(x,y)
x <- sample(5000,4e7, replace=T)
y <- sample(1000,4e7, replace=T)
.gcd(x,y)
system.time(.gcd(x,y))
range(.gcd(x,y))
.gcd(x,y) |> table() |> sort() |> plot()
.gcd(x,y) |> table() |> sort(decreasing=FALSE) |> head(n=20)
.gcd(x,y) |> table() |> sort(decreasing=FALSE) |> tail(n=20)
length(x)
.gcd(x,y) |> table() |> sort(decreasing=FALSE) |> tail(n=40) |> plot()
system.time(.lcm(x,y))
devtools::load_all()
system.time(.lcm(x,y))
.lcm(-2,2)
.lcm(-2,5)
.lcm(-2,-5)
devtools::load_all()
devtools::load_all()
devtools::load_all()
rm(beats)
rhythmOffset(c('4','4','4','4'))
rhythmOffset(c('4','4','4','4'), start = rational(1))
rhythmOffset(c('4','4','4','4'))
rhythmOffset(c('4','4','4.','8'))
devtools::load_all()
rhythmOffset(c('4','4','4.','8'))
rhythmOffset(c('4.','4.','4.','4.','4','4'))
rhythmOffset(c('4.','4.','4.','4.','4','4'), tatum=rational(3,2))
devtools::load_all()
beats(c('4.','4.','4.','4.','4','4'), tatum=rational(3,2))
devtools::load_all()
beats(c('4.','4.','4.','4.','4','4'))
devtools::load_all()
beats(c('4.','4.','4.','4.','4','4'))
beats(c('4.','4.','4','4.','4.','4'))
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4','4.')))
beatoff
sweep(beatoffset, 2, meat, '>')
sweep(beatoffset, 2, beat, '>')
sweep(beatoffset, 1, beat, '>')
sweep(beatoffset, 2, beat, '>')
beatoffset
beat
sweep(beatoffset, 2, beat, '>')
sweep(rbind(beatoffset), 2, beat, '>')
as.list(beat)
lapply(as.list(beat), `>`, e2 = beatoffset)
Reduce('+', lapply(as.list(beat), `>`, e2 = beatoffset))
beat
Reduce('+', lapply(as.list(beatoff), `>`, e2 = beatoffset))
devtools::load_all()
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4','4.')))
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4.','4')))
beatoff
subbeat
beatoffset
devtools::load_all()
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4.','4','4.','4.','4'), beat =rhythmInterval(c('4.','4')))
beatoff
beatoffset
beatsize
offset
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beatoffset
beatoff
subbeat
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
subbeat
beatoofset
beatoffset
beatoff
beatoff[2]
beatoff[2] > beatoffset
beatoff[1] > beatoffset
beatoff[1]
beatoff[1] >= beatoffset
beatoff[2] >= beatoffset
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
x
rational(x,y)
rational(x[1:10000],y[1:10000])
rational(x[1:100000],y[1:100000])
a<-rational(x[1:100000],y[1:100000])
b<-rational(x[1e5 + 1:100000],y[1e5 + 1:100000])
a
b
a > b
system.time(a > b)
as.double(rational(1,3))
as.double(rational(1,3) * 3)
as.double(rational(1,11))
as.double(rational(1,11) * 11)
rational(1,11)
rational(1,11)  > rational(1,11)
rational(115,11)  > rational(115,11)
rational(115,11)  == rational(115,11)
devtools::load_all()
system.time(a > b)
rational(3,1) > rational(1/2)
rational(3,1) > rational(3/2)
rational(3,1) > rational(5/2)
rational(3,1) > rational(6/2)
rational(3,1) >= rational(6/2)
length(a)
a<-rational(x[1:1000000],y[1:1000000])
b<-rational(x[1e6+1:1000000],y[1e6+1:1000000])
system.time(a > b)
system.time(a <= b)
devtools::load_all()
system.time(a <= b)
rational(-1,3) < rational(0,0)
rational(-1,3) < rational(0,1)
sign(rational(-1,3))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beatcount
beatoffset
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
lapply(as.list(beatoff), `<=`, e2 = beatoffset)
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beatoff
beatoffset
beatoff[1] <= beatoffset
beatoff[2] <= beatoffset
beatoff[1] <= beatoffset
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
x
y
x
y
x
y
x
y
x
y
x
y
x
y
x
y
x
y
x
y
x
y
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
x
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
e1
e2
e1
d1
d2
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
gcd(2,3)
gcd(2,0)
devtools::load_all()
gcd(2,0)
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
x
x
x
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
0 %% 0
2 %% 0
0 %% 2
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
gcd(2,0)
devtools::load_all()
gcd(2,0)
gcd(2,0)
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
gcd(2,0)
gcd(2,0)
r
notyet
r> 0 & !is.na(r)
y
devtools::load_all()
gcd(2,0)
devtools::load_all()
gcd(2,0)
devtools::load_all()
gcd(2,0)
gcd(2,2)
de
de
devtools::load_all()
gcd(2,2)
gcd(2,0)
gcd(0,0)
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
x
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
offset
subbeat
rhythmOffset
beatoffset
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')))
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
batoff
beatoff
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
beatoff
beatoffset
subbeat
beatoffset
beatoffset - beatoff[subbeat]
subbeat
beatoffset - beatoff[subbeat + 1]
devtools::load_all()
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')), phase = -rational(3,8))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4','4.')))
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
x <- rhythmInterval(c('4.','8','4','4','4','8','8','2', '4.','8','8','8','4','4','8','8','4','4','2'))
devtools::load_all()
x <- rhythmInterval(c('4.','8','4','4','4','8','8','2', '4.','8','8','8','4','4','8','8','4','4','2'))
x
beats(c('4.','4','4.','4','4.','4'), beat =rhythmInterval(c('4.','4')))
as.rational('3/4')
devtools::load_all()
rhythmInterval('*M4/4')
rhythmInterval('*M3/4')
rhythmInterval('*M3/4')
rhythmInterval('*M3/4')
devtools::load_all()
rhythmInterval('*M3/4')
rhythmInterval('*M3/4')
rhythmInterval('*M7/4')
rhythmInterval('*M3/4')
rhythmInterval('*M3/4')
rhythmInterval('*M3/4')
rhythmInterval.character('*M3/4')
rhythmInterval.character('*M3/4')
duration('*M3/4')
recip('*M3/4')
x
length(x)
tapply(x, rep(c(1,2),c(10,9)),list)
tapply_inplace(x, rep(c(1,2),c(10,9)),list)
tapply_inplace(x, rep(c(1,2),c(10,9)),c)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
seq_along(x)
tapply_inplace(x, rep(c(1,2),c(10,9)),c)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
output
indices
unlist(output)
devtools::load_all()
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
output
do.call('c', output)
c(out[[1]],output[[2]])
c(output[[1]],output[[2]])
output
class(output)
do.call('c', output)
do.call('c', output)
c(output[[1]],output[[2]])
do.call('c', unlist(output))
unlist
do.call('c', unlist(output))
c
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
indices
output
class(output)
do.call
do.call('c', output)
do.call('c', output[[1]])
do.call('c', output[1])
do.call('c', output[1:2])
do.call('cbind', output[1:2])
do.call('c', output[1:2])
x
list(x)
do.call('x', x)
do.call('', list(x))
do.call('c', list(x))
x
c
?c
do.call('c', list(x, recurive=T))
do.call('c', list(x, recursive=T))
do.call('c', list(x, recursive=TRUE))
c(list(x))
c(list(x), recursive=T)
c(list(x), recursive=F)
c(list(x), recursive=T)
c(list(x,x), recursive=T)
do.call('c',list(x,x))
devtools::load_all()
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
devtools::load_all()
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
tapply_inplace(x, rep(c(1,2),c(10,9)),\(x) x * 2L)
devtools::load_all()
x
measure(x)
devtools::load_all()
measure(x)
devtools::load_all()
measure(x)
x
devtools::load_all()
measure(x)
measure(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
devtools::load_all()
measure(x,rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
c(rational(1,8),x)
measure(c(rational(1,8), x),rhythmInterval(c('1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
measure(c(rational(1,8), x),rhythmInterval(c('1','1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
measure(c(rational(1,8), x),phase=-rational(1,8),rhythmInterval(c('1','1','1','1','1','1','1','1','1','2.','2.','2.','2.','2.','2.','2.','2.','1','1','1')))
