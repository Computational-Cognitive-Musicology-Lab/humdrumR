-t(apply(-h[,4:1], 1,cumsum))
(apply(-h[,4:1], 1,cumsum))
h[,4:1]
-h[,4:1]
-t(apply(-h[,4:1], 1,cumsum))
t(apply(-h[,4:1], 1,cumsum))
-t(apply(-h[,4:1], 1,cumsum))
h
outer(z,c(1,.5,.25,.125), '%/%')
sweep(outer(z,c(1,.5,.25,.125), '%/%') ,MARGIN = 2, rev(c(1,2,4,8)), '*') -> h
sweep(outer(z,c(1,.5,.25,.125), '%/%') ,MARGIN = 2, rev(c(1,2,4,8)), '*')
outer(z,c(1,.5,.25,.125), '%/%')
sweep(outer(z,c(1,.5,.25,.125), '%/%') ,MARGIN = 2, rev(c(1,2,4,8)), '*')
outer(z,c(1,.5,.25,.125), '%/%')
sweep(outer(z,c(1,.5,.25,.125), '%/%') ,MARGIN = 2, rev(c(1,2,4,8)), '*')
sweep(outer(z,c(1,.5,.25,.125), '%/%') ,MARGIN = 2, rev(c(1,2,4,8)), '*') ->h
h
apply(h,1,cumsum)
t(apply(h,1,cumsum))
h - t(apply(h,1,cumsum))
h - t(apply(-h,1,cumsum))
h - -t(apply(-h,1,cumsum))
h - t(apply(-h,1,cumsum))
h
outer(z,c(1,.5,.25,.125), '%/%')
outer(z,c(1,.5,.25,.125), '%/%') %*% c(1,.5,.25,.125)
outer(z,c(1,.5,.25,.125), '%/%') %*% c(0,.5,.25,.125)
outer(z,c(1,.5,.25,.125), '%/%') %*% c(1,.5,.25,.125)
z
outer(z,c(1,.5,.25,.125), '%/%')
f <- function(v) {
ifelse(length(v) == 1, v, v[1] + 1 / f(v[-1]))
}f <- function(v) {
ifelse(length(v) == 1, v, v[1] + 1 / f(v[-1]))
}
f <- function(v) {
ifelse(length(v) == 1, v, v[1] + 1 / f(v[-1]))
}
f(.75)
z
log(z,2)
-log(z,2)
-log(z,2) %% 1
-log(z,2)
h <- c(1,.5,.25,.125)
outer(log(z,2), log(h,2),`%/%`)
outer(log(h,2), log(z,2),`%/%`)
t(outer(log(h,2), log(z,2),`%/%`))
z
log(z,.5)
log(z,.25)
log(z,.125)
outer(z,h,log)
outer(z,1/h,log)
outer(z,h,log)
outer(h,z,log)
t(outer(h,z,log))
t(outer(h,z,log)) == 1
t(outer(h,z,log))
outer(z,h,log)
outer(z,-h,log)
outer(z,1/h,log)
outer(h,z,log)
outer(sqrt(h),z,log)
outer(h^2,z,log)
z
z
rint(1/z)
numeric2rint(z)
numeric2rint(z)@Denominator
rint(numeric2rint(z)@Denominator,1)
numeric2rint(z
)
g <- numeric2rint(z)
g
sigma(g)
length(g)
length(sigma(g))
g
sigma(g)
g
delta(g)
devtools::load_all()
delta(g)
delta
diff(g)
hasdim(g)
cbind(g)
diff(g)
delta
delta(g)
delta(g)
diff(g)
diff(g) > rint(g@Denominator)
diff(g) > rint(g@Denominator[-1])
g
rint(4) > rint(g@Denominator[-1])
rint(g@Denominator[-1])
rint(g@Denominator)
head(rint(g@Denominator),-1)
rint(4) > head(rint(g@Denominator),-1)
rint(16,3) > head(rint(g@Denominator),-1)
rint(8,3) > head(rint(g@Denominator),-1)
rint(8,3) - head(rint(g@Denominator),-1)
rint(8,3) / head(rint(g@Denominator),-1)
rint(8,3) - head(rint(g@Denominator),-1)
x
z
rint(z)
z
rint(1,z)
z
numeric2rint(z)
z
1/z
rational(2,8)
lcd(z)
gcd(z)
gcd
gcd(z,z)
gcd(z[1],z[2])
Reduce(gcd,z)
z/Reduce(gcd,z)
z/Reduce(gcd,1/z)
z/Reduce(gcd,z)
z
numeric2rint(z)
numeric2rint(z)@Numerator
k<-numeric2rint(z)
struct2data.frame(z@Numerator, rint(z@Denominator))
struct2data.frame(k@Numerator, rint(k@Denominator))
k
k %/% rint(2)
k %% rint(2)
k / rint(2)
1:8
(1:16) %/% 2
(1:16) %/% 4
(0:16) %/% 4
(0:16) %/% 2
(0:16) %/% 5
(0:16) %/% 2
(0:16) %/% 3
(0:16) %/% 8
c(1,0,1,0,0)
rep(c(1,0,1,0,0), length.out=17)
hop
hop(c)
hop(1:16,pattern=c(2,3))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- 1L
cumsum(vec)
}
segments
f(0:16)
0:16 - f(0:16)
f(0:16, 4)
0:16 %/% (f(0:16, 4))
0:16 %% (f(0:16, 4))
0:16 %/% (f(0:16, 4))
0:16 %/% 4
f(0:16,4)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- 1L
cumsum(vec) - 1
}
f(0:16,4)
0:16 %/% 4
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- 1L
sum(pattern) * (cumsum(vec) - 1)
}
f(0:16,4)
0:16 - f(0:16,4)
0:16 - f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- 1L
sum(pattern) * (cumsum(vec) - 1)
}
0:16 - f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- 1L
(cumsum(vec) - 1)
}
0:16 - f(0:16)
f(0:16)
f(0:16) * 5
(0:16) - (f(0:16) * 5)
f(0:16)
rep(c(2,3), 2:3, length.out=16)
rep(c(2,3), each=2:3, length.out=16)
rep(c(2,3), each=2:3)
rep(c(2,3), c(2,3))
rep(c(2,3), c(2,3), length.out=10)
rep(c(2,3), c(2,3))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- pattern
}
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
vec[hop(off, pattern = pattern)] <- pattern
vec
}
rep(c(2,3), c(2,3))
f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pattern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
cumsum(vec)
}
f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pattern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
off - (cumsum(vec) - pattern[1])
}
f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pattern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
off - (cumsum(vec))
}
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pat
tern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
off - (cumsum(vec))
}
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pat
tern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
off - (cumsum(vec))
}
f(0:16)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pattern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
off - (cumsum(vec) - pattern[1])
}
f(0:16)
f(0:16,4)
f(0:16,2)
f(0:16,3)
f(0:16,5)
f(0:16,c(2,2))
f(0:16,c(2,4))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
hop <- hop(off, pattern = pattern)
vec[hop] <- rep(pattern, length.out = length(hop))
browser()
off - (cumsum(vec) - pattern[1])
}
f(0:16,c(2,4))
vec
cumsum(vec)
cumsum(vec - pattern[1])
cumsum(vec) - pattern[1]
vec
off %/% 5
off - (off %/% 5)
hop
vec
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off <- off %/% sum(pattern)
off - (pattern - pattern[1])
}
f(0:16,c(2,4))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off <- off %/% sum(pattern)
off - (pattern)
}
f(0:16,c(2,4))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off <- off %% sum(pattern)
off - (pattern - pattern[1])
}
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off <- off %% sum(pattern)
off - (pattern - pattern[1])
}
f(0:16,c(2,4))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off <- off %% sum(pattern)
browser()
off - (pattern - pattern[1])
}
f(0:16,c(2,4))
pattern
off
off %/% 5
5 * (off %/% 5)
off %% 5
pattern
pattern
f(0:16,c(2,4))
off
sum(pattern)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
off <- off %% sum(pattern)
pattern <- rep(rep(pattern, pattern), length.out = length(off))
off - (pattern - pattern[1])
}
f(0:16,c(2,4))
f(0:16,c(2,3))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
off <- off %% sum(pattern)
pattern <- rep(rep(pattern, pattern), length.out = length(off))
browser()
off - (pattern - pattern[1])
}
f(0:16,c(2,3))
pattern
pattern[1]
off
pattern - pattern[1]
pattern-pattern[2]
pattern
pattern-3
lag(2:3,,fill=0)
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
off <- off %% sum(pattern)
pattern <- rep(rep(lag(2:3, fill = 0), pattern), length.out = length(off))
off - (pattern - pattern[1])
}
f(0:16,c(2,3))
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
off <- off %% sum(pattern)
pattern <- rep(rep(lag(2:3, fill = 0), pattern), length.out = length(off))
browser()
off - (pattern - pattern[1])
}
f(0:16,c(2,3))
pattern
off
off %/% 5
off
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
browser()
off <- off %% sum(pattern)
pattern <- rep(rep(lag(2:3, fill = 0), pattern), length.out = length(off))
off - (pattern - pattern[1])
}
f <- function(off, pattern = c(2,3)) {
vec <- integer(length(off))
browser()
off <- off %% sum(pattern)
pattern <- rep(rep(lag(2:3, fill = 0), pattern), length.out = length(off))
off - (pattern - pattern[1])
}
f(0:16,c(2,3))
off
pattern
off %/% pattern
off %/% 5
(2*off) %/% 5
off %/% 5
off %% 5
off - (off %% 5)
off - (off %/% 5)
off - (off %% 5)
off - (off %/% 5)
off - (off %% 5)
(off %% 5)
(off %/% 5)
2 * (off %/% 5)
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
measures - rep(seq_along(pattern) - 1L, length.out = measures)
}
f(0:16,c(2,3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
measures - rep(rep(seq_along(pattern) - 1L, pattern), length.out = measures)
}
f(0:16,c(2,3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
browser()
measures - rep(rep(seq_along(pattern) - 1L, pattern), length.out = measures)
}
f(0:16,c(2,3))
measures
rep(seq_along(pattern) - 1, pattern)
rep(rep(seq_along(pattern) - 1, pattern), length.out = length(measures))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
measures - rep_along(measures, rep(seq_along(pattern) - 1L, pattern))
}
f(0:16,c(2,3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
measures + rep_along(measures, rep(seq_along(pattern) - 1L, pattern))
}
f(0:16,c(2,3))
f(0:16,c(2))
f(0:16,c(4))
f(0:16,c(2:3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
measures + rep_along(measures, rep(seq_along(pattern) - 1L, pattern))
}
f(0:16,c(2:3))
f(c(5,9),c(2:3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
browser()
measures + rep_along(measures, rep(seq_along(pattern) - 1L, pattern))
}
f(c(5,9),c(2:3))
off
off %/% 5
length(pattern) * (off %/% 5)
off %% 5
pattern
pattern - pattern[1]
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
browser()
}
f(c(5,9),c(2:3))
pattern
modoff
findInterval(modoff,pattern)
pattern[findInterval(modoff,pattern)]
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
measures + pattern[findInterval(modoff,pattern)]
}
f(c(5,9),c(2:3))
f(0:16,c(2:3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
measures + pattern[findInterval(modoff,pattern, left.open = TRUE)]
}
f(0:16,c(2:3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
measures + pattern[findInterval(modoff,pattern, rightmost.closed = T)]
}
f(0:16,c(2:3))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
measures + pattern[findInterval(modoff,pattern, rightmost.closed = TRUE)]
}
f(0:16,c(2:3))
f(2,c(2:3))
z
f(z, c(.25,.375))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
browser()
measures + pattern[findInterval(modoff,pattern, rightmost.closed = TRUE)]
}
f(z, c(.25,.375))
measures
modoff
sum(pattern)
pattern
f(z, c(.25,.375))
f <- function(off, pattern = c(2,3)) {
measures <- length(pattern) * (off %/% sum(pattern))
modoff <- off %% sum(pattern)
pattern <- pattern - pattern[1]
measures + pattern[findInterval(modoff,pattern, rightmost.closed = TRUE)]
}
f(z, c(.25,.375))
f(c(0,.25,5/8,7/8), c(.25,.375))
1 / (2 + 1/6)
2 + 1/6
1 / (13/6)
library(humdrumR)
