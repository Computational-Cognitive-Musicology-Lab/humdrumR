url: https://computational-cognitive-musicology-lab.github.io/humdrumR
home:
  sidebar:
    structure: [links, license, community, citation, authors, dev, toc]
  links:
  - text: R language official website
    href: https://www.r-project.org
  - text: Humdrum website
    href: https://www.humdrum.org/
  - text: Computational and Cognitive Musicology Lab
    href: https://ccml.gtcmt.gatech.edu/
  - text: Georgia Tech Center for Music Technology
    href: https://gtcmt.gatech.edu/
template:
  bootstrap: 5
  bootswatch: flatly
articles:
- title: Basics
  navbar: Basics
  contents:
  - GettingStarted
  - IntroForCoders
- title: Background
  desc: Background info on humdrum and R
  navbar: R/Humdrum background
  contents:
  - HumdrumSyntax
  - RPrimer
- title: Preparing data
  desc: Getting your data ready for analysis
  navbar: Data prep
  contents: 
  - ReadWrite
  - Reshaping
  - Filtering
- title: Analysis
  desc: Tools for analysis
  navbar: Analysis
  contents:
  - Summary
  - WorkingWithData
- title: Musical Processing
  desc: Funcitonality for analyzing musical information
  navbar: Musical tools
  contents:
  - PitchAndTonality
  - RhythmAndMeter
  - KeysAndChord
reference:
- title: "Reading and Summarizing Data"
  desc: "These tools allow you to import, validate, and abstractly summarize the content of humdrum data."
- subtitle: "Reading and Writing"
  contents:
  - validateHumdrum
  - readHumdrum
  - writeHumdrum
- subtite: "Summarizing"
  contents:
  - humSummary
  - census
  - interpretations
  - reference
  - spines
- title: "Working with Data"
  desc: >
    These pages describe tools used to manipulate the musical data ensconced within humdrumR data structures.
- subtitle: "Manipulating Humdrum Data"
  contents:
  - withinHumdrum
  - subset.humdrumR
  - indexHumdrum
  - humWindows
- title: "Musical Tools"
  desc: >
    These pages describe the classes and functions that directly represent or engage musical/music-theoretic concepts.
- subtitle: "Pitch overviews"
  desc: "These pages overview general concepts in humdrumR pitch:"
  contents:
  - humdrumPitch
  - pitchFunctions
  - pitchParsing
  - pitchDeparsing
  - chordFunctions
  - chordParsing
  - chordDeparsing
  - keyFunctions
  - keyParsing
  - keyDeparsing
  - tonalIntervalS4
  - tertianSetS4
  - diatonicSetS4
- subtitle: "Pitch functions"
  desc: "These functions translate between pitch representations:"
  contents:
  - pitch
  - degree
  - interval
  - kern
  - solfa
  - solfg
  - lilypond
  - helmholtz
  - tonh
  - octave
  - step
  - accidental
  - quality
  - bhatk
  - semits
  - midi
  - pc
  - cents
  - freq
  - LO5th
  - transpose
  - invert
  - int
  - mint
  - hint
  - is.simple
  - is.generic
- subtitle: "Key and chord functions"
  desc: "These functions translate between diatonic and tertian representations:"
  contents:
  - romanNumerals
  - key
  - signature
  - romanKey
  - roman
  - harm
  - chord
  - tertian
  - figuredBass
  - is.major
  - is.minor
- subtitle: "Rhythm"
  desc: "Rhythm and meter classes and functions."
  contents:
  - time
  - timeline
  - rhythmInterval
  - rhythmFunctions
  - humMeter
  - localDuration
  - ioi
  - untie
  - meter
  - measure
  - metric
  - tatum
  - tactus
  - nbeats
- subtitle: "Lyrics"
  desc: "Lyrics and text functions."
  contents:
  - wort
  - silbeFormat
- title: "Data Structures"
  desc: >
    These are pages describe the data structures of humdrumR---which contain the musical data.
  contents:
  - humdrumRclass
  - extractTandem
  - humActive
  - humCoercion
  - humMerge
  - collapseHumdrum
  - foldHumdrum
  - foldExclusive
  - foldGraceNotes
  - unfoldStops
  - humSize
  - humTable
  - struct
- title: "Other Functions"
  desc: "Other useful tools"
- subtitle: "Numeric values"
  contents:
  - rational
  - expand
- subtitle: "Manipulating Vectors"
  contents:
  - delta
  - ditto
  - lag
  - segments
  - sigma
- subtitle: "Regular Expressions"
  desc: >
     [Regular Expressions](https://en.wikipedia.org/wiki/Regular_expression) are essential tools for working with humdrum data.
     These functions provide functionality for working with regular expressions.
  contents:
  - RegexFind
  - humdrumDispatch
  - regexConstruction
  - REparser
- subtitle: "Miscallaneus"
  contents:
  - humdrumRroot
  - partialMatching
