.libPaths()
.libPaths()[3]
install.packages('pander', .libPaths()[3])
install.packages('combinat', .libPaths()[3])
install.packages('pryr')
pryr::ast(4+5)
pryr::ast(4+(2+3)
)
pryr::ast(4+(2+3))
pryr::ast(4+(sqrt(3))
pryr::ast(4+(sqrt(3)))
!!x
library(rlang)
!!quote(x)
!!s
expr(s)
!!expr(s)
expr(s)
x <- expr(s)
x
~~x
!!x
install.packages('lobstr')
View(expr(x + 5))
expr(x,4)
expr(3 + 4)
expr(x + 5)
sym
sym('x')
expr(x + y)
x = 'test'
expr(!!x)
x
text = exprs(-1,-2)
expr(!!!text)
expr(f(!!!text))
enquo(x)
enquo(a)
enquo(lettesr)
quo(letters)
quo(!!letters)
quo(letters)
source('~/.active-rstudio-document', echo=TRUE)
test(letters)
source('~/.active-rstudio-document', echo=TRUE)
test(letters)
test
?setGeneric
source('~/.active-rstudio-document', echo=TRUE)
test(letters)
source('~/.active-rstudio-document', echo=TRUE)
test(letters)
test(1:10)
source('~/.active-rstudio-document', echo=TRUE)
test(1:10)
test('d')
test.character('d')
x='d'
test.character(x)
test.character <- function(x) {
enexpr(!!x)
}
test.character(x)
?rlang
>?rlang
??rlang
source('~/.active-rstudio-document', echo=TRUE)
test(x)
x
enquote(x)
enquo(x)
expr(x)
enexpr(x)
sys.call()
test(x)
sys.call()
sys.call()[1]
sys.call()[[1]]
sys.call()[[2]]
sys.call()[[3]]
sys.call()[[2]]
sys.call()[[3]]
sys.call()[[1]]
install.packages('lazy_eval')
install.packages('lazyeval')
source('~/.active-rstudio-document', echo=TRUE)
test(x+2)
test.character(x+2)
expr_text
lazyeval::expr_text
test.character <- function(x) {
lazyeval::expr_text(x)
}
test.character(x+2)
test(x+2)
?lazyeval
library("lazyeval", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
source('~/.active-rstudio-document', echo=TRUE)
test(3)
test(3 + 2)
test(x + 2)
x
source('~/.active-rstudio-document', echo=TRUE)
test(x + 2)
test(f(x))
test.default(f(x))
test.default <- function(x) {
lazyeval::expr_text(x)
}
test.default(f(x))
test(f(x))
source('~/.active-rstudio-document', echo=TRUE)
test(f(x))
test.default(f(x))
/data.table
library(data.table)
?data.table
[.data.table
`[.data.table`
data.table::`[.data.table`
data.table::cedta
`[`
`[.test(x, i) substitute(i)
`[.test` <- function(x, i) substitute(i)
(letters %class% 'test')[x]
(letters %class% 'test')[x+2]
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters)[x]
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters)[x]
new('test', letters)[x + 2]
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / {x+2}
new('test', letters)[x + 2]
?setMethod
?signature
?setMethod
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / {x+2}
new('test', letters) / `{`
new('test', letters) / `{`('x')
new('test', letters) / {'x'}
new('test', letters) / 'x'
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.call('x',3)
new('test', letters) / call('x',3)
new('test', letters) / {x+2}
new('test', letters) / {'s'}
new('test', letters) / 's'
new('test', letters) / s
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / s
new('test', letters) / as.name(s)
new('test', letters) / name(s)
new('test', letters) / as.name(s)
new('test', letters) / sym(s)
new('test', letters) / quote(s)
new('test', letters) / {s}
new('test', letters) / {x}
new('test', letters) / expr(s)
new('test', letters) / (s)
new('test', letters) / 's'
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / 's'
new('test', letters) / s
new('test', letters) / expr(s)
new('test', letters) / expr(s + 2)
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / expr(s + 2)
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / expr(s + 2)
expr(s+2)
new('test', letters) / (~s + 2)
new('test', letters) / ~(s + 2)
new('test', letters) / ~s + 2
new('test', letters) / ~x =x
new('test', letters) / ~x x
new('test', letters) / ~x +x
class(x+x)
class(~x+x)
attributes(~x+x)
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / ~x +x
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / ~x +x
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / ~x +x
getMethod('test','name')
getMethod('test')
getMethods('/')
findMethods('/')
new('test', letters) / expression(x +x)
expr(x + x)
class(expr(x + x))
class(expression(x + x))
class(quote(x + x))
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / expression(x +x)
new('test', letters) / as.symbol('x')
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
deparse(as.symbol('x'))
source('~/.active-rstudio-document', echo=TRUE)
deparse(as.symbol('x'))
new('test', letters) / as.symbol('x')
x
as.symbol('x')
class(as.symbol('x'))
new('test', letters) / as.symbol('x')
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
e2
quote(e2)
enquote(e2)
expr(e2)
enexpr(e2)
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / as.symbol('x')
new('test', letters) / x
source('~/Bridge/Research/Programming/Rpackages/humdrumR/humdrumR/R/humRhythm.R', echo=TRUE)
new('test', letters) / x
new('test', letters) / x + 2
new('test', letters) / {x + 2}
x
rm9x)
rm(x)
new('test', letters) / {x + 2}
new('test', letters) / x
source('~/.active-rstudio-document', echo=TRUE)
new('test', letters) / x
new('test', letters) / ~x
new('test', letters) / x
new('test', letters) / Spine
Spine <- a
Spine <- 2
new('test', letters) / Spine
library(tidyverse)
exprs
