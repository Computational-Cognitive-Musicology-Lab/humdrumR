}
profile=tapply(Ps,Beats,sum)
plot(as.numeric(names(profile)),profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(list(Beats,Ps))
}
x=do.song(songs[[5002]][1:8],meter = 4)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,sum)
profile=profile/max(profile)
plot(as.numeric(names(profile)),profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(list(Beats,Ps))
}
x=do.song(songs[[5002]][1:12],meter = 4)
x=do.song(songs[[5002]][1:16],meter = 4)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,sum)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(list(Beats,Ps))
}
x=do.song(songs[[5002]][1:24],meter = 4)
x=do.song(songs[[5003]][1:10],meter = 4)
x=do.song(songs[[5003]][1:30],meter = 4)
x=do.song(songs[[5009]][1:10],meter = 4)
x=do.song(songs[[5009]][1:30],meter = 3)
x=do.song(songs[[5008]][1:8],meter = 3)
x=do.song(songs[[5008]][1:24],meter = 2)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,max)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(list(Beats,Ps))
}
x=do.song(songs[[5008]][1:24],meter = 2)
x=do.song(songs[[5010]][1:24],meter = 2)
x=do.song(songs[[5010]][1:24],meter = 3)
x=do.song(songs[[5001]][1:24],meter = 4)
x=do.song(songs[[5002]][1:24],meter = 4)
source('~/Bridge/Research/Projects/MarkovWithoutStructure/MarkovWithoutMeter.R', echo=TRUE)
x=do.song(songs[[5002]][1:24],meter = 4)
x=do.song(songs[[5002]][1:24],meter = 4,2)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=Max=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
Max=c(Max,(as.numeric(names(ps))+cumsum(c(0,song))[i])[which(max(ps))])
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,max)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(Max)
}
x=do.song(songs[[5002]][1:24],meter = 4,2)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=Max=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
Max=c(Max,(as.numeric(names(ps))+cumsum(c(0,song))[i])[which.max(ps)])
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,max)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
return(Max)
}
x=do.song(songs[[5002]][1:24],meter = 4,2)
x
table(x)
table(x)/2
z=table(x)/2
points(as.numeric(names(z)),z,col='green')
points(as.numeric(names(z)),z,col='green',pch=15,cex=2)
points(as.numeric(names(z)),rep(1,length(z)),col='green',pch=15,cex=2)
xx
x
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=Max=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
Max=c(Max,(as.numeric(names(ps))+cumsum(c(0,song))[i])[which.max(ps)])
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,max)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(unique(Max),rep(1,length(unique(Max))),col='green',pch=2)
}
x=do.song(songs[[5002]][1:24],meter = 4,2)
do.song=function(song,meter=4,pickup=0){
cont=context(song)
Beats=Ps=Max=c()
res=''
for(i in 1:nrow(cont)){
plot(cumsum(c(0,song)),ylim=c(-.1,1),type='n',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(cumsum(c(0,song))[i],-.07,pch=16,cex=.5)
ps=future(cont[i,1])
points(as.numeric(names(ps))+cumsum(c(0,song))[i],
ps,type='h',lwd=2)
Beats=c(Beats,as.numeric(names(ps))+cumsum(c(0,song))[i])
Ps=c(Ps,ps)
Max=c(Max,(as.numeric(names(ps))+cumsum(c(0,song))[i])[which.max(ps)])
if(res=='') res=readline()
}
profile=tapply(Ps,Beats,max)
profile=profile/max(profile)
plot(as.numeric(names(profile)),col='red',lwd=2,profile,ylim=c(-.1,1),type='h',xlim=c(0,sum(song)+1),axes=F)
axis(1,0:(sum(song)+1),(((0:(sum(song)+1))-pickup)%%meter)+1,cex=.4)
for(k in seq(pickup,sum(song)+1,meter)){ segments(k,0,k,1,lty='dashed')}
text(cumsum(c(0,song)),rep(-.03,length(song)+1),labels = gsub('^0','',c(song,'')))
points(unique(Max),rep(1,length(unique(Max))),col='green',pch=3)
}
x=do.song(songs[[5011]][1:24],meter = 4,2)
x=do.song(songs[[5011]][1:24],meter = 4,0)
x=do.song(songs[[5012]][1:24],meter = 4,0)
x=do.song(songs[[5012]],meter = 4,2)
x=do.song(songs[[5013]],meter = 4,2)
x=do.song(songs[[5014]][1:30],meter = 4,2)
x=do.song(songs[[5014]][1:30],meter = 3)
x=do.song(songs[[5015]][1:30],meter = 3)
x=do.song(songs[[5015]][1:30],meter = 4)
x=do.song(songs[[5016]][1:30],meter = 4)
plot(density(rnorm(1000,0,1)))
plot(density(rnorm(1000,0,1)))
plot(density(rnorm(1000,0,1)))
plot(density(rnorm(1000,0,1)))
plot(density(rnorm(10000,0,1)))
plot(density(rnorm(10000,0,1)))
plot(density(rnorm(10000,0,1)))
plot(density(rnorm(10000,0,1)))
plot(density(rnorm(100000,0,1)))
plot(density(rnorm(100000,0,1)))
plot(density(rnorm(100000,0,1)))
plot(density(rnorm(1000000,0,1)))
plot(density(rnorm(1000000,0,1)))
plot(density(rnorm(1000000,0,1)))
plot(density(rnorm(1000000,0,1)))
x=rnorm(1000000,0,1)
hist(x)
points(density(x))
hist(x,freq=F)
points(density(x))
install.packages('opencpu')
library(opencpue)
library(opencpu)
plot
library(devtools)
install_github('opencpu/gitstats')
library(opencpu)
opencpu$browse('/library/gitstats/www')
getwd()
.libPaths()
library(shiny)
library(shiny)
runExample('06_tabsets')
shiny::runApp('R/x86_64-pc-linux-gnu-library/3.2/shiny/myattempts')
shiny::runApp('R/x86_64-pc-linux-gnu-library/3.2/shiny/myattempts')
uiOutput('summary')
uiOutput('plot')
uiOutput('ui.R')
uiOutput('sdk')
uiOutput('ui.R')
uiOutput(plot())
uiOutput(plot(1:10))
invisible(x)
invisible(4)
?invisible(4)
?invisible
source('~/Bridge/Research/Tools/Vowel Formants.R', echo=TRUE)
LowF=87.3071
harmonics(LowF,main='Fundamental is F2')
MiddleC=130.813*2
harmonics(MiddleC,main='Fundamental is Middle C')
HighE=659.255
harmonics(HighE,main='Fundamental is E4')
curve(.25*(formants(x)-.2),0,5000,add=T)
pdf('Formants.pdf')
harmonics(LowF,main='/i/ when fundamental \n is F2',Formants=c(240,2400))
harmonics(MiddleC,main='/i/ when fundamental \n is Middle C',Formants=c(240,2400))
harmonics(HighE,main='/i/ when fundamental \n is E4',Formants=c(240,2400))
#
harmonics(LowF,main='/a/ when fundamental \n is F2',Formants=c(850,1610))
harmonics(MiddleC,main='/a/ when fundamental \n is Middle C',Formants=c(850,1610))
harmonics(HighE,main='/a/ when fundamental \n is E4',Formants=c(850,1610))
install.packages('vowels')
library(vowels)
?vowels
ohiovowels
data(ohiovowels)
str()
x
x=data(ohiovowels)
x
strdata(ohiovowels)
str(1)data(ohiovowels)
?data
.9^2
cumprod(c(.9,.9))
cumprod(c(1,.9,.9))
harmonics=function(F0=100,fade=.9,n=12){
F0*(1:n)*c(1,cumprod(rep(fade,n-1)))
}
harmonics()
harmonics=function(F0=100,fade=.9,n=12){
F0*(1:n)
}
harmonics()
harmonics=function(F0=100,n=12){
F0*(1:n)
}
formants=function(x,first=568,second=866){
dnorm(x,first,50)+dnorm(x,second,50)
}
curve(formants(x),0,20000)
plot(1:10)
dev.off()
dev.off()
dev.off()
curve(formants(x),0,20000)
curve(formants(x),0,20000,log = T)
curve(formants(x),0,20000,log = 1)
curve(formants(x),0,20000,log = 2)
curve(formants(x),0,2000)
source('~/Bridge/Research/Tools/Vowel Formants.R', echo=TRUE)
curve(formants(x),0,2000)
curve(formants(x),0,20000)
curve(formants(x),0,5000)
formant.func=function(x,center,width=1000){
X=.5+((x-center)/width)
return(+.1+dbeta(X,50,50)/3)
}
formants(harmonics())
harmonics=function(F0=100,n=12){
F0*(1:n)
}
formants=function(x,first=753,second=1278){
dnorm(x,first,50)+dnorm(x,second,502)
}
curve(formants(x),0,5000)
formants(harmonics())
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,50)+dnorm(x,second,502)
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,50)+dnorm(x,second,50)
}
curve(formants(x),0,5000)
formant.func=function(x,center,width=1000){
X=.5+((x-center)/width)
return(+.1+dbeta(X,50,50)/3)
}
formants=function(x,centers=c(240,2400)){
out=c()
for(i in 1:length(x)){
out[i]=formant.func(x[i],
centers[1],
width=5000)+formant.func(x[i],
centers[2],
width=5000)
}
return(out)
}
formants()
formants(3)
curve(formants(x),0,5000)
harmonics=function(F0=100,n=12){
F0*(1:n)
}
formants=function(x,first=753,second=1278){
dnorm(x,first,50)+dnorm(x,second,50)
}
curve(formants(x),0,5000)
formants(harmonics())
points(harmonics(),formants(harmonics()),type='h')
curve(formants(x),0,2000)
points(harmonics(),formants(harmonics()),type='h')
points(harmonics(50),formants(harmonics(50)),type='h')
harmonics(50)
formants=function(x,first=753,second=1278){
dnorm(x,first,100)+dnorm(x,second,100)
}
curve(formants(x),0,2000)
harmonics(50)
points(harmonics(50),formants(harmonics(50)),type='h')
harmonics=function(F0=100,n=30){
F0*(1:n)
}
harmonics(50)
curve(formants(x),0,2000)
points(harmonics(50),formants(harmonics(50)),type='h')
install.packages('phonTools')
library("phonTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
vowelplot(100)
vowelplot(100,200)
vowelplot(100,9000)
vowelplot(200,9000)
vowelplot(c(100,300,400),9000)
vowelplot(c(100,300,400),c(,990,1110,2000))
vowelplot(c(100,300,400),c(990,1110,2000))
voweldata
voweldata()
data(voweldata)
$name
name
data(voweldata)$data
hp5
data(h95)
h95$f1
tapply(h95$f1,h95$vowel)
tapply(h95$f1,h95$vowel,mean)
barplot(tapply(h95$f1,h95$vowel,mean))
barplot(tapply(h95$f2,h95$vowel,mean))
barplot(tapply(h95$f1,h95$vowel,mean))
vowelplot(h95$f1,h95$f2,h95$vowel)
tapply(h95$f1,h95$vowel,mean)
tapply(h95$f2,h95$vowel,mean)
tapply(h95$f1,h95$vowel,mean)
tapply(h95$f2,h95$vowel,mean)
curve(formants(x))
curve(formants(x),0,1000)
curve(formants(x),0,4000)
curve(dbeta)
curve(dbeta(x,5,1))
curve(dbeta(x,.1,1))
curve(dbeta(x,20,4))
curve(dbeta(x,4,20))
curve(dbeta(x*1000,4,20))
curve(dbeta(x*1000,4,20),0,1000)
curve(dbeta(x/1000,4,20),0,1000)
formants=function(x,first=753,second=1278){
dbeta(x/1000,4,20)+dbeta(x/1000,6,18)
}
curve(formants(x))
curve(formants(x),0,1000)
formants=function(x,first=753,second=1278){
dbeta(x/1000,4,20)+dbeta(x/1000,17,18)
}
curve(formants(x),0,1000)
formants=function(x,first=753,second=1278){
dbeta(x/1000,4,20)+dbeta(x/1000,14,18)
}
curve(formants(x),0,1000)
formants=function(x,first=753,second=1278){
dbeta(x/1000,4,20)+dbeta(x/1000,13,18)
}
curve(formants(x),0,1000)
formants=function(x,first=753,second=1278){
dnorm(x,first,100)+dnorm(x,second,100)
}
curve(formants(x),0,1000)
formants=function(x,first=753,second=1278){
dnorm(x,first,100)+dnorm(x,second,100)
}
curve(formants(x),0,1000)
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,200)
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,200)*.6
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.6
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.2
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.3
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.3+dnorm(x,1000,1000)
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.3+dnorm(x,1000,300)
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.3+dnorm(x,1000,400)
}
curve(formants(x),0,5000)
formants=function(x,first=753,second=1278){
dnorm(x,first,200)+dnorm(x,second,100)*.3+dnorm(x,1000,400)*2
}
curve(formants(x),0,5000)
data(ohiovowels)
ohiovowels
str(ohiovowels)
library(phonTools)
data(h95)
tapply(h95$f1,h95$vowel,mean)
tapply(h95$f2,h95$vowel,mean)
setwd('Bridge/Research/Programming/Rpackages/Flow/data/')
dir()
?save
load('2pac_California Love.RData')
x
x[[1]]
x[[2]]
